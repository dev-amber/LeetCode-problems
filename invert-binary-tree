class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
            if (root == nullptr) {
        return nullptr; // Base case: if the node is null, return null
    }
    
    // Swap the left and right subtrees
    TreeNode* temp = root->left;
    root->left = root->right;
    root->right = temp;
    
    // Recursively invert the left and right subtrees
    invertTree(root->left);
    invertTree(root->right);
    
    return root;
    }
};
