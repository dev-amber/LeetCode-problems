class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        priority_queue<int> maxHeap;

    // Push all stones into the heap
    for (int stone : stones) {
        maxHeap.push(stone);
    }

    // Process the stones until there is one or none left
    while (maxHeap.size() > 1) {
        int stone1 = maxHeap.top(); // Heaviest stone
        maxHeap.pop();
        int stone2 = maxHeap.top(); // Second heaviest stone
        maxHeap.pop();

        if (stone1 != stone2) {
            maxHeap.push(stone1 - stone2); // Push the difference back
        }
    }

    // Return the last stone weight, or 0 if no stones are left
    return maxHeap.empty() ? 0 : maxHeap.top();
    }
};
