class Solution {
public:
    vector<int> fairCandySwap(vector<int>& aliceSizes, vector<int>& bobSizes) {
     int sumAlice = 0, sumBob = 0;
    for (int candy : aliceSizes) sumAlice += candy;
    for (int candy : bobSizes) sumBob += candy;

    // Calculate the target difference
    int targetDiff = (sumAlice - sumBob) / 2;

    // Use a set for quick lookup of Bob's candy sizes
    unordered_set<int> bobSet(bobSizes.begin(), bobSizes.end());

    // Find the pair of candy boxes to swap
    for (int a : aliceSizes) {
        int b = a - targetDiff;
        if (bobSet.find(b) != bobSet.end()) {
            return {a, b}; // Found a valid pair
        }
    }

    return {};   
    }
};
